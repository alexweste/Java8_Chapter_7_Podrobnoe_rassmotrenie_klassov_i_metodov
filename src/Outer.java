/* Вложенные и внутренние классы
    В языке Java допускается определять один класс в другом классе.
Такие классы называются вложенными. Область действия вложенного класса
ограниченна областью действия внешнего класса. Так, если класс B определённ
в классе A, то класс B не может существовать независимо от класса A.
Вложенный класс имеет доступ к членам (в том числе закрытым) того
класса, в который он вложен. Но внешний класс не имеет доступа к членам
вложенного класса. Вложенный класс, объявленный непосредственно в
области действия своего внешнего класса, считается его членом.
Можно также объявлять вложенные классы, являющиеся локальными для
блока кода.
    Существует два типа вложенных классов: статические и нестатические.
Статическими называется такой вложенный класс, который объявляется с
модификатором static. А поскольку он является статическим, то должен
обращаться к нестатическим членам своего внешнего класса посредством
объекта. Это означает, что вложенный статический класс не может непосредственно
ссылаться на нестатические члены своего внешнего класса. В силу этого
ограничения статические вложенные классы применяются редко.
    Наиболее важным типом вложенного класса является внутренний класс.
Внутренний класс - это нестатический вложенный класс. Он имеет доступ
ко всем переменным и методам своего внешнего класса и может непосредственно
ссылаться на них таким же образом, как это делают остальные нестатические
члены своего внешнего класса.
    В приведённом ниже примере программы демонстрируется определение
и использование внутреннего класса. В классе Outer содержится одна
переменная экземпляра outer_x, оден метод экземпляра test() и определяется
оден внутренний класс Inner.
 */
// Внешний класс
class Outer {
    int outer_x = 100;

    void test() {
        Inner inner = new Inner();
        inner.display();
    }

    // Внутренний класс
    class Inner {
        void display() {
            System.out.println("вывод: outer_x = " + outer_x);
        }
    }
}

class InnerClassDemo {
    public static void main(String[] args){
        Outer outer = new Outer();
        outer.test();
    }
}

/* В данной программе внутренний класс Inner  определён в области
действия класса Outer. Поэтому любой код из класса Inner может непосредственно
обращаться к переменной outer_x. Метод экземпляра display() определён
в классе Inner. Этот метод выводит значение переменной outer_x в стандартный
поток вывода. В методе main() из класса InnerClassDemo создаётся экземпляр
класса Outer и вызывается его метод test(). А в этом методе создаётся
экземпляр класса Inner и вызывается метод display().
 */
